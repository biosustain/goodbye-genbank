{
  "name": "Goodbye-Genbank",
  "tagline": "A Python package for Biopython that gives feature annotations from GenBank records a new and better life",
  "body": "## About Goodbye, GenBank\r\n\r\n**Goodbye, GenBank** converts [SeqFeature](http://biopython.org/DIST/docs/api/Bio.SeqFeature.SeqFeature-class.html) sequence annotations from NCBI GenBank records to a common and simplified format. GenBank feature annotations have a feature key and reasonably well defined qualifiers, but non-standard and discontinued feature types and qualifiers are commonly used and often the feature key is something someone made up and not a valid GenBank feature key. And even when a valid GenBank feature key is used, it is often incomplete and useless without additional details in the qualifiers.\r\n\r\nThis package converts most feature keys to appropriate Sequence Ontology terms used by GFF3 and SBOL. Non-standard qualifiers are repaired or removed.\r\n\r\n**Goodbye, GenBank** is intended for those who wish to clean-up their GenBank files and then transition to a different format. The philosophy of this project is to salvage what is salvageable and to discard what is not. GenBank feature types are translated to Sequence Ontology terms; qualifiers are converted into a reduced set that contains only the parts that are not broken. Qualifiers are also converted to their correct type: int for integers, list only for qualifiers that can appear multiple times, bool for flags.\r\n\r\nMoreover, different options are available to configure what is kept and what is thrown away.\r\n\r\n### Installation\r\n\r\n```bash\r\npip install gbgb\r\n```\r\n\r\n### Example \r\n\r\n```python\r\n>>> feature\r\nSeqFeature(FeatureLocation(ExactPosition(2931), ExactPosition(2936), strand=1), type='-10_signal')\r\n>>> feature.qualifiers\r\n{'ApEinfo_fwdcolor': ['pink'],\r\n 'ApEinfo_graphicformat': ['arrow_data {{0 1 2 0 0 -1} {} 0} width 5 offset 0'],\r\n 'ApEinfo_revcolor': ['pink'],\r\n 'label': ['RNAII Promoter (-10 signal)']}\r\n>>>\r\n>>> from gbgb import convert_feature\r\n>>> feature = convert_feature(feature)\r\n>>> feature\r\nSeqFeature(FeatureLocation(ExactPosition(2931), ExactPosition(2936), strand=1), type='minus_10_signal')\r\n>>> feature.qualifiers\r\n{'note': 'RNAII Promoter (-10 signal)'}\r\n>>>\r\n>>> from gbgb import genbank_feature_key\r\n>>> genbank_feature_key('minus_10_signal')\r\n'regulatory'\r\n```\r\n\r\n-----\r\n\r\n\r\n### Documentation\r\n\r\n#### **`gbgb`**\r\n\r\n- **`convert_feature_type(feature: Bio.SeqFeature) -> str`**\r\n\r\n  Finds a Sequence Ontology term for a GenBank feature.\r\n\r\n  This function requires a :class:`SeqFeature` as opposed to just a GenBank feature key, since the type of a GenBank\r\n  feature is not always fully described by its feature key. For example a `regulatory` GenBank feature could have\r\n  a `/regulatory_class=\"promoter\"` qualifier.\r\n  \r\n  **Returns** a Sequence Ontology term for the type of this feature\r\n\r\n- **`convert_feature(feature: Bio.SeqFeature, qualifiers=gbgb.maps.qualifiers.DEFAULT_QUALIFIER_TRANSFORMERS) -> Bio.SeqFeature`**\r\n\r\n  **Returns** a `Bio.SeqFeature` with valid GenBank qualifiers and a feature type that is a Sequence Ontology term.\r\n\r\n- **`unconvert_feature(feature: Bio.SeqFeature) -> Bio.SeqFeature`**\r\n\r\n  Restores a feature to its sad former shape.\r\n  \r\n  To \"clean up\" a GenBank feature while maintaining it's format, use `unconvert_feature(convert_feature(feature))`.\r\n\r\n  **Returns** a `SeqFeature` with each qualifier being a list and having a GenBank feature key\r\n \r\n- **`genbank_feature_key(sequence_feature_term: str, idempotent=True) -> str`**\r\n\r\n  **Returns** a GenBank feature key for the provided Sequence Ontology term\r\n  \r\n#### **`gbgb.maps.qualifiers`**\r\n\r\n\r\nThe following are transformation functions. They take two identical qualifiers objects, `before` and `after` and update `after` to reflect the updated qualifiers. All of these functions return `after`.\r\n    \r\n- **`remove_protein_id_and_add_to_xrefs(before: dict, after: dict) -> dict`**\r\n\r\n   Protein IDs are codes such as \"AAF19666.1\", which come from \"International collaborators\" and should all be\r\n   on GenBank. This translation function removes the `/protein_id=\"\"` qualifier and instead adds a `/db_xref=\"\"`\r\n   qualifier.\r\n\r\n   Removes any malformed protein IDs as they are useless.\r\n \r\n- **`rename_label_to_note(before: dict, after: dict) -> dict`**\r\n\r\n   The `/label=\"\"` qualifier was discontinued in 2010, but is still used frequently.\r\n\r\n   See [GenBank Release 180](http://www.ncbi.nlm.nih.gov/genbank/release/180/).\r\n   \r\n- **`GENBANK_SINGLE_QUALIFIERS: [str]`**\r\n    \r\n- **`format_single_qualifiers(before: dict, after: dict) -> dict`**\r\n\r\n      \r\n- **`GENBANK_INTEGER_QUALIFIERS: [str]`**\r\n    \r\n- **`format_integer_qualifiers(before: dict, after: dict) -> dict`**\r\n\r\n \r\n- **`GENBANK_FLAG_QUALIFIERS: [str]`**\r\n    \r\n- **`format_flag_qualifiers(before: dict, after: dict) -> dict`**\r\n\r\n   \r\n- **`APE_QUALIFIER_NAMESPACE = 'ApEinfo_'`**\r\n    \r\n- **`remove_ape_a_plasmid_editor_qualifiers(before: dict, after: dict) -> dict`**\r\n\r\n     \r\n- **`GENE_RELATED_FEATURES: [str]`**\r\n     \r\n- **`GENBANK_QUALIFIER_FEATURE_KEYS: {str: [str]}`**\r\n     \r\n- **`GENBANK_QUALIFIERS: [str]`**\r\n    \r\n- **`remove_unrecognized_qualifiers(before: dict, after: dict) -> dict`**\r\n\r\nThe transformation function has one additional argument:\r\n\r\n- **`remove_qualifiers_inappropriate_for_feature(before: dict, after: dict, genbank_feature_key: str) -> dict`**\r\n\r\n   Removes all qualifiers that are not valid for a certain genbank feature key.\r\n\r\n- **`DEFAULT_QUALIFIER_TRANSFORMERS: [callable]`**\r\n   \r\n\t```\r\n\tDEFAULT_QUALIFIER_TRANSFORMERS = (\r\n\t    format_single_qualifiers,\r\n\t    format_integer_qualifiers,\r\n\t    format_flag_qualifiers,\r\n\t    remove_protein_id_and_add_to_xrefs,\r\n\t    rename_label_to_note,\r\n\t    remove_unrecognized_qualifiers,\r\n\t)\r\n\t```\r\n\r\n#### **`gbgb.maps.features`**\r\n\r\n- **`DEFAULT_SO_TERM = 'sequence_feature'`**\r\n\r\n- **`GENBANK_DISCONTINUED_FEATURE_KEY_SO_TERMS: {str: str}`**\r\n\r\n- **`GENBANK_FEATURE_KEY_SO_TERMS: {str: str}`**\r\n\r\n- **`SO_TERM_GENBANK_FEATURE_KEYS: {str: str}`**\r\n\r\n- **`GENBANK_FEATURE_KEYS: [str]`**\r\n\r\n- **`UNAMBIGUOUS_INVALID_KEY_SO_TERMS: {str: str}`**\r\n\r\n- **`GENBANK_REGULATORY_DEFAULT_SO_TERM = 'regulatory_region'`**\r\n\r\n- **`GENBANK_REGULATORY_CLASS_SO_TERMS: {str: str}`**\r\n\r\n- **`GENBANK_NC_RNA_DEFAULT_SO_TERM = 'ncRNA_gene'`**\r\n\r\n- **`GENBANK_NC_RNA_CLASS_SO_TERMS: {str: str}`**\r\n\r\n- **`GENBANK_MOBILE_ELEMENT_DEFAULT_SO_TERM: 'mobile_genetic_element'`**\r\n\r\n- **`GENBANK_MOBILE_ELEMENT_TYPE_SO_TERMS: {str: str}`**\r\n\r\n- **`GENBANK_REPEAT_REGION_DEFAULT_SO_TERM = 'repeat_region'`**\r\n\r\n- **`GENBANK_REPEAT_TYPE_SO_TERMS: {str: str}`**\r\n\r\n- **`GENBANK_PSEUDOGENE_DEFAULT_SO_TERM = 'pseudogene'`**\r\n\r\n- **`GENBANK_PSEUDOGENE_TYPE_SO_TERMS: {str: str}`**\r\n\r\n- **`DEFAULT_GENBANK_FEATURE_KEY = 'misc_feature'`**\r\n\r\n\r\n#### **`gbgb.utils`**\r\n\r\n- **`single(qualifiers: dict, name: str, on_multiple_ignore=False: bool)`**\r\n  \r\n  Converts `qualifiers[name]` from a list-like object to a single item. If `on_multiple_ignore` is `True`, skips qualifiers that are defined multiple times; otherwise, returns the first qualifier. If `qualifiers[name]` is not list-like, returns it.\r\n\r\n  **Returns** a single value for the qualifier; ``None`` if the qualifier has no value.\r\n  \r\n- **`as_set(qualifiers) -> set`**\r\n- **`as_list(qualifiers) -> list`**\r\n\r\n### Design considerations\r\n\r\nFor the most part, *Goodbye, GenBank* attempts to be idempotent, i.e. features and their types/keys and qualifiers can be safely transformed any number times with the same settings. The apparent mismatch between the conversion to Sequence Ontology feature terms and valid/fixed GenBank qualifiers is to simplify downstream processing. It is up to the users which qualifiers they wish to keep, but at least the choices they are given are reasonable.\r\n\r\n### Authors and Contributors\r\n\r\nGoodbye, Genbank is written and maintained by Lars Sch√∂ning (@lyschoening).\r\n\r\n### Support or Contact\r\n\r\nIf you have any questions or suggestions or if you have found a unique new specimen of GenBank files that you would like to convert, please open an issue.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}